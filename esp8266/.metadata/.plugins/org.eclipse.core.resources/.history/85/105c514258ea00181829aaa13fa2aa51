patterns = ["Flow", "Solid", "Fade", "Twinkle"];
colors=["RainbowColors","ForestColors","RedGreenBlue","OceanColors","OrangeWhiteBlue","Random","GreenRedWhiteStripe","YellowBlueWhiteStripe","Christmas","PartyColors","RedWhiteBlue","CloudColors"];
//var wsUri = "ws://"+location.hostname+"/ws";
//websocket = new WebSocket(wsUri);
//
//function wsHandler() {
//    websocket.onopen = function(evt) {
//      for (i=1;i<=2;i++) {
//        var hover = document.getElementById("tmp"+i);
//        hover.parentNode.removeChild(hover);
//      }
//    };
//    websocket.onclose = function(evt) {
//      status.innerHTML="DISCONNECTED";
//    };
//    websocket.onmessage = function(evt) {
//        if (evt.data != "Connected") {
//        	status.innerHTML="data arrived";
//        } else {
//          var status = document.getElementById('status');
//          status.innerHTML="Synchronized";
//        }
//    };
//    websocket.onerror = function(evt) {
//      console.log("ERROR: " + evt.data);
//    };
//  } 
function serverResponseHandler(s) {
	prevIndex = 12;
	if (s.index != 0) {
		prevIndex = s.index -1;
	}
	trPrev = document.getElementById("tr" + prevIndex);
	trPrev.style.backgroundColor=('transparent');
	var tr = document.getElementById("tr"+s.index);
	tr.style.backgroundColor=('red');
}
/*
 * Sends data for the pick color
 */
function sendColor(rgb){
	var data = '{"cmd":4,"cid":"dummy","data":['+rgb.r+","+rgb.g+","+rgb.b+"]}";
	websocket.send(data);
}
/*
 * Sends data for the light sequence
 */
function sendData(){
	var data = '{"cmd":1,"cid":"dummy","data":[';
	for (i = 0; i < colors.length; i++) {
		var chk = document.getElementById("in_"+i);	//the checkbox object
		if (chk.checked)
			data = data + '1';
		else
			data = data + '0';
		var r = document.getElementsByName("r"+i);	//radiobutton group
	    for (var j=0, len=r.length; j<len; j++) {
	    	if (r[j].checked) {
	    		if ( i == colors.length - 1)
	    			data = data + r[j].value +']}';
	    		else
	    			data = data + r[j].value + ',';
	    	}
	    }
	}
	var txt2 = document.getElementById("msg");
	txt2.value=data;
	websocket.send(data);
}
/*
 * sends data for fire sequence
 */
function sendFireData(){
	var data = '{"cmd":3,"cid":"dummy","data":';
	var r = document.getElementsByName("rFire");	//radiobutton group
    for (var j=0, len=r.length; j<len; j++) {
    	if (r[j].checked) {
			data = data + r[j].value +'}';
    	}
    }
	var txt2 = document.getElementById("msg");
	txt2.value=data;
	websocket.send(data);
}
/**
 * Called when mouse hovers on the item
 * @param ito
 * @returns
 */
function hover(ito) {
	ito.style.backgroundColor = "gray";
}
/**
 * Called when mouse unhovers on the item
 * @param ito
 * @returns
 */
function unhover(ito) {
	ito.removeAttribute("style");
}
function handleClick(ito) {
	alert(ito.id);
}
/**
 * Loads the patterns page where user can select the different light effects 
 * @returns
 */
function loadPatterns(){
	var mainDiv = document.getElementById("main");
	var table = document.createElement('table');
	table.setAttribute("border","1");
	var th = document.createElement('th');
	var trh = document.createElement('tr');
	trh.append(th);
	for (i=0;i<patterns.length;i++) {
		var th1 = document.createElement('th');
		th1.setAttribute('style', "width:50px");
		th1.innerHTML = patterns[i];
		trh.append(th1);
	}
	table.append(trh);
	var th2 = document.createElement('th');
	var th3 = document.createElement('th');
	var p = document.createElement('p');
	for (i = 0; i < colors.length; i++) {
		var lbl = document.createElement('label');
		lbl.setAttribute('id', "lbl_"+i);
		lbl.textContent = colors[i];
		lbl.setAttribute('onclick',"handleClick(this)");
		lbl.setAttribute("onmouseover","hover(this)");
    	lbl.setAttribute("onmouseout","unhover(this)")
    	lbl.setAttribute("class","lbl");;
		var input = document.createElement('input');
		input.setAttribute('type',"checkbox");
		input.setAttribute('id', "in_"+i);
		input.setAttribute('checked',"true");
		input.setAttribute("class","chk");;
		var tdLbl = document.createElement('td');
		tdLbl.append(input);
		tdLbl.append(lbl);
		var tr = document.createElement('tr');
		tr.setAttribute('id', "tr"+i);
		tr.append(tdLbl);
		for (j=0;j<patterns.length;j++) {
			var td1 = document.createElement('td');
			td1.setAttribute('id', "td"+j+"_"+i);
			var r1 = document.createElement('input');
			r1.setAttribute('type',"radio");
			r1.setAttribute('name',"r"+i);
			r1.setAttribute("class","radio");;
			if (j==0)
				r1.setAttribute('checked',"checked");
			r1.setAttribute('id', "r"+i+"_"+j);
			r1.setAttribute('value', j);
			td1.append(r1);
			tr.append(td1);
		}
		table.append(tr);
	}
	p.appendChild(table);
	mainDiv.appendChild(p);
}
/////////////////////// for the config
var stringToChange = 1;
function init() {
	  drawString();
}
function stringClick(ako) {
	alert(ako.id)
	alert(ako.innerHTML)
}
function drawString(ako) {
	e = document.getElementById("composer");
	var table = document.createElement('table');
	table.setAttribute("style","width:100%;");
//	table.setAttribute("border","1");
	e.appendChild(table);
	drawPixels(table, 2, 30, 1);
	drawPixels(table, 1, 60, 2);
	var br = document.createElement("br");
	document.getElementById("composer").appendChild(br);
}
function drawPixels(table, strings, numPixels, lightStyle) {
	var tr = document.createElement('tr');
	table.append(tr);
	var input = document.createElement('input');
	input.setAttribute('type',"radio");
	input.setAttribute('name',"lightStyle");
	input.setAttribute('value', lightStyle);
	input.setAttribute('strings', strings);
	var tdOpt = document.createElement('td');
	tr.appendChild(tdOpt);
	tdOpt.appendChild(input);
	for (j = 0; j < strings; j++) {
		var tdInfo = document.createElement('td');
		tr.append(tdInfo);
		sel = '<select id="lbl'+lightStyle+'_'+j+'U" style="width:5em;">'; 
		for (k = 1; k <= 8; k++) {
			sel += '<option value="'+k+'">'+k+'</option>';
		}
		sel += '</select>';
		tdInfo.innerHTML = 'Universe:';
		tdInfo.innerHTML += sel;
		tdInfo.innerHTML += '<br>Pixels:<label id="lbl'+lightStyle+'_'+j+'P">'+numPixels+'</label><br>Strings:<label id="lbl'+lightStyle+'_'+j+'S">'+strings+'</label><br>';
		var td = document.createElement('td');
		tr.append(td);
		var div = document.createElement("div");
		div.setAttribute('id',"divstring"+lightStyle);
		div.setAttribute('class',"menu");
		var a = document.createElement("a");
		a.setAttribute('class', "submenu");
		a.setAttribute('id',lightStyle);
		a.setAttribute("style","margin:10px 5px;height:50px;border-radius:0px;");
		div.appendChild(a);
		td.appendChild(div);
		var div2 = document.createElement("div");
		div2.setAttribute('id',"divstring"+lightStyle+"_"+j);
		div2.setAttribute("style","margin:0px 10px;display:inline-block;");
		div2.setAttribute("onClick","stringClick(this)");
		div2.setAttribute("onmouseover","hoverConfig(this)");
		div2.setAttribute("lbl", 'lbl'+lightStyle+'_'+j);
		div2.setAttribute('pix',numPixels);
		div2.setAttribute('s',strings);
		div2.setAttribute('u',lightStyle);
		a.appendChild(div2);
	  	for (i = 0; i<7; i++) {
	  		var p = document.createElement("P");
	  		p.setAttribute('id',"style"+lightStyle+"_"+i);
	  		//color = c[i % 3]
	  		if (i==0)
	  			p.innerHTML= 1;
	  		else if (i==6)
	  			p.innerHTML= numPixels/strings;
	  		else
	  			p.innerHTML= "=";
	  		p.setAttribute('class', "pStyle");  	  		
	  		p.setAttribute('style', "border-radius:10px;background-color:lightgreen;");
	  		div2.appendChild(p);  
	  	}
	}
}


function sendConfig(){
	var r = document.getElementsByName("lightStyle");	//radiobutton group
	isChecked = false;
	for (var j=0, len=r.length; j<len; j++) {
		if (r[j].checked) {
			isChecked = true;
			strings = r[j].getAttribute("strings");
			value = r[j].value;
			var obj = { cmd: 2};
			obj.cid = "dummy";
			var arr = [];
			for (i = 0; i < strings; i++) {
				var e = document.getElementById("lbl"+value+"_"+i+"U");
				var u = e.options[e.selectedIndex].value;
				var s = document.getElementById("lbl"+value+"_"+i+"S").innerHTML;
				var p = document.getElementById("lbl"+value+"_"+i+"P").innerHTML;
				var data = { u : u, s : s, p : p };
				arr[i] = data;
			}
			obj.data = arr;
		}	
	}
	if (isChecked) {
		websocket.send(JSON.stringify(obj));	
	} else
		alert ("Please select which light style you have.");
//	if (r[0].checked) {
//		//2 strings
//		strings = r[0].getAttribute("strings");
//		value = r[0].value;
//		var obj = { cmd: 2};
//		var arr = [];
//		for (i = 0; i < strings; i++) {
//			var e = document.getElementById("lbl"+value+"_"+i+"U");
//			var u = e.options[e.selectedIndex].value;
//			var s = document.getElementById("lbl"+value+"_"+i+"S").innerHTML;
//			var p = document.getElementById("lbl"+value+"_"+i+"P").innerHTML;
//			var data = { u : u, s : s, p : p };
//			arr[i] = data;
//		}
//		obj.data = arr;
//	} else if (r[1].checked) {
//		//1 string
//	} else {
//		//no selection
//		alert ("Please select which light style you have.");
//	}
}
function hoverConfig(ako) {
	var lbl = ako.getAttribute("lbl");
	var txt  = document.getElementById("txtU");
	txt.innerHTML = lbl;	
}
/**
 * used to debounce the events
 * 
 * @param func
 * @param wait
 * @param immediate
 * @returns
 */
function debounce(func, wait, immediate) {
	var timeout;
	return function() {
		var context = this, args = arguments;
		var later = function() {
			timeout = null;
			if (!immediate) func.apply(context, args);
		};
		var callNow = immediate && !timeout;
		clearTimeout(timeout);
		timeout = setTimeout(later, wait);
		if (callNow) func.apply(context, args);
	};
};