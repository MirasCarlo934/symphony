<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/util https://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/data/mongo https://www.springframework.org/schema/data/mongo/spring-mongo.xsd">

    <context:property-placeholder location="bm.properties"/>

<!--    <mongo:db-factory client-uri="${mongo.serverURI}/${mongo.database.registry}"/>-->

<!--    <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">-->
<!--        <constructor-arg name="mongoDbFactory" ref="mongoDbFactory"/>-->
<!--    </bean>-->

    <!--<util:map id="serviceList" map-class="java.util.HashMap">-->
        <!--<entry key="${mqtt.topic.bm.register}" value-ref="services.managers.register"/>-->
        <!--<entry key="${mqtt.topic.bm.unregister}" value-ref="services.managers.unregister"/>-->
    <!--</util:map>-->

    <!--<util:list id="serviceTopics" list-class="java.util.Vector">-->
        <!--<value>${mqtt.topic.bm.register}</value>-->
        <!--<value>${mqtt.topic.bm.unregister}</value>-->
    <!--</util:list>-->

    <util:list id="adaptorsList" list-class="java.util.Vector">
        <ref bean="ADAPTOR.mongodb"/>
    </util:list>


    <bean id="ADAPTOR.mongodb" class="symphony.bm.registry.adaptors.MongoAdaptor">
        <constructor-arg ref="mongoDbFactory"/>
    </bean>

    <!--<bean id="CORE.controller" class="symphony.bm.bmlogicdevices.controller.Controller">-->
        <!--<constructor-arg name="logDomain" value="${log.logic}"/>-->
        <!--<constructor-arg name="serviceManagers" ref="serviceList"/>-->
        <!--<constructor-arg name="symphonyEnvironment" ref="CORE.env"/>-->
    <!--</bean>-->

    <!--<bean id="CORE.env" class="symphony.bm.bmlogicdevices.SymphonyEnvironment">-->
        <!--<constructor-arg name="adaptors" ref="adaptorsList"/>-->
        <!--<constructor-arg name="devicesCollectionName" value="${mongo.collection.devices}"/>-->
        <!--<constructor-arg name="logDomain" value="${log.logic}"/>-->
        <!--<constructor-arg name="logName" value="env"/>-->
        <!--<constructor-arg name="mongoDBManager" ref="DB.mongodb"/>-->
        <!--<constructor-arg name="roomsCollectionName" value="${mongo.collection.rooms}"/>-->
    <!--</bean>-->

    <!--<bean id="DB.mongodb" class="symphony.bm.bmlogicdevices.mongodb.MongoDBManager">-->
        <!--<constructor-arg name="database" value="${mongo.database}"/>-->
        <!--<constructor-arg name="logDomain" value="${log.db}"/>-->
        <!--<constructor-arg name="logName" value="MongoClient"/>-->
        <!--<constructor-arg name="uri" value="${mongo.serverURI}"/>-->
    <!--</bean>-->

<!--    COMMENT FOR PRODUCTION   -->
    <!--<bean id="MQTT.client" class="symphony.bm.bmlogicdevices.mqtt.MQTTClient">-->
        <!--<constructor-arg name="bm_topic" value="${mqtt.topic.bm}"/>-->
        <!--<constructor-arg name="clientId" value="${mqtt.clientID}"/>-->
        <!--<constructor-arg name="controller" ref="CORE.controller"/>-->
        <!--<constructor-arg name="devices_topic" value="${mqtt.topic.devices}"/>-->
        <!--<constructor-arg name="error_topic" value="${mqtt.topic.error}"/>-->
        <!--<constructor-arg name="logDomain" value="${log.mqtt}"/>-->
        <!--<constructor-arg name="logName" value="client"/>-->
        <!--<constructor-arg name="serverURI" value="${mqtt.serverURI}"/>-->
        <!--<constructor-arg name="service_topics" ref="serviceTopics"/>-->
        <!--<constructor-arg name="univ_topic" value="${mqtt.topic.universal}"/>-->
    <!--</bean>-->

    <!--<bean id="services.managers.register" class="symphony.bm.bmlogicdevices.services.ServiceManager">-->
<!--&lt;!&ndash;        <constructor-arg name="msn" value="${serviceManagers.register.msn}"/>&ndash;&gt;-->
        <!--<lookup-method name="createService" bean="services.register"/>-->
    <!--</bean>-->

    <!--<bean id="services.managers.unregister" class="symphony.bm.bmlogicdevices.services.ServiceManager">-->
<!--&lt;!&ndash;        <constructor-arg name="msn" value="${serviceManagers.unreg.msn}"/>&ndash;&gt;-->
        <!--<lookup-method name="createService" bean="services.unregister"/>-->
    <!--</bean>-->

    <!--<bean id="services.register" class="symphony.bm.bmlogicdevices.services.RegisterService" scope="prototype">-->
        <!--<constructor-arg name="symphonyEnvironment" ref="CORE.env"/>-->
        <!--<constructor-arg name="logDomain" value="${log.logic}"/>-->
        <!--<constructor-arg name="messageServiceName" value="${services.register.msn}"/>-->
        <!--<constructor-arg name="mongoDBManager" ref="DB.mongodb"/>-->
        <!--<constructor-arg name="productsCollectionName" value="${mongo.collection.products}"/>-->
        <!--<constructor-arg name="serviceName" value="${services.register.name}"/>-->
    <!--</bean>-->
    <!--<bean id="services.unregister" class="symphony.bm.bmlogicdevices.services.UnregisterService" scope="prototype">-->
        <!--<constructor-arg name="symphonyEnvironment" ref="CORE.env"/>-->
        <!--<constructor-arg name="logDomain" value="${log.logic}"/>-->
        <!--<constructor-arg name="messageServiceName" value="${services.unreg.msn}"/>-->
        <!--<constructor-arg name="serviceName" value="${services.unreg.name}"/>-->
    <!--</bean>-->

</beans>