<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/util https://www.springframework.org/schema/util/spring-util.xsd">

    <context:property-placeholder location="bm-logic-devices.properties" />

    <util:map id="serviceList" map-class="java.util.HashMap">
        <entry key="register" value-ref="services.register"/>
    </util:map>

    <util:list id="adaptorsList" list-class="java.util.Vector">
        <ref bean="ADAPTOR.mongodb"/>
    </util:list>

    <bean id="ADAPTOR.mongodb" class="symphony.bm.bmlogicdevices.mongodb.MongoDBAdaptor">
        <constructor-arg name="adaptorName" value="MongoDB"/>
        <constructor-arg name="devicesCollectionName" value="${mongo.collection.devices}"/>
        <constructor-arg name="logDomain" value="${log.adaptor}"/>
        <constructor-arg name="mongoDBManager" ref="DB.mongodb"/>
        <constructor-arg name="productsCollectionName" value="${mongo.collection.products}"/>
        <constructor-arg name="roomsCollectionName" value="${mongo.collection.rooms}"/>
    </bean>

    <bean id="CORE.controller" class="symphony.bm.bmlogicdevices.controller.Controller">
        <constructor-arg name="logDomain" value="${log.logic}"/>
        <constructor-arg name="services" ref="serviceList"/>
        <constructor-arg name="outboundRestMicroserviceCommunicator" ref="REST.outboundCommunicator"/>
    </bean>

    <bean id="CORE.environment" class="symphony.bm.bmlogicdevices.SymphonyEnvironment">
        <constructor-arg name="adaptors" ref="adaptorsList"/>
        <constructor-arg name="mongoDBManager" ref="DB.mongodb"/>
        <constructor-arg name="roomsCollectionName" value="${mongo.collection.rooms}"/>
    </bean>

    <bean id="DB.mongodb" class="symphony.bm.bmlogicdevices.mongodb.MongoDBManager">
        <constructor-arg name="database" value="${mongo.database}"/>
        <constructor-arg name="logDomain" value="${log.db}"/>
        <constructor-arg name="logName" value="MongoClient"/>
        <constructor-arg name="uri" value="${mongo.serverURI}"/>
    </bean>

    <bean id="REST.outboundCommunicator" class="symphony.bm.bmlogicdevices.rest.OutboundRestMicroserviceCommunicator">

    </bean>

    <bean id="services.register" class="symphony.bm.bmlogicdevices.services.RegisterService">
        <constructor-arg name="devicesCollectionName" value="${mongo.collection.devices}"/>
        <constructor-arg name="environment" ref="CORE.environment"/>
        <constructor-arg name="logDomain" value="${log.logic}"/>
        <constructor-arg name="messageServiceName" value="${services.register.msn}"/>
        <constructor-arg name="mongoDBManager" ref="DB.mongodb"/>
        <constructor-arg name="productsCollectionName" value="${mongo.collection.products}"/>
        <constructor-arg name="restCommunicator" ref="REST.outboundCommunicator"/>
        <constructor-arg name="roomsCollectionName" value="${mongo.collection.rooms}"/>
        <constructor-arg name="serviceName" value="${services.register.name}"/>
    </bean>

</beans>